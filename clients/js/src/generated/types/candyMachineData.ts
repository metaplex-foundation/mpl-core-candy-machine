/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  bool,
  option,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';
import {
  ConfigLineSettings,
  ConfigLineSettingsArgs,
  HiddenSettings,
  HiddenSettingsArgs,
  getConfigLineSettingsSerializer,
  getHiddenSettingsSerializer,
} from '.';

/** Candy machine configuration data. */
export type CandyMachineData = {
  /** Number of assets available */
  itemsAvailable: bigint;
  /** Max supply of each individual asset (default 0) */
  maxEditionSupply: bigint;
  /** Indicates if the asset is mutable or not (default yes) */
  isMutable: boolean;
  /** Config line settings */
  configLineSettings: Option<ConfigLineSettings>;
  /** Hidden setttings */
  hiddenSettings: Option<HiddenSettings>;
};

export type CandyMachineDataArgs = {
  /** Number of assets available */
  itemsAvailable: number | bigint;
  /** Max supply of each individual asset (default 0) */
  maxEditionSupply: number | bigint;
  /** Indicates if the asset is mutable or not (default yes) */
  isMutable: boolean;
  /** Config line settings */
  configLineSettings: OptionOrNullable<ConfigLineSettingsArgs>;
  /** Hidden setttings */
  hiddenSettings: OptionOrNullable<HiddenSettingsArgs>;
};

export function getCandyMachineDataSerializer(): Serializer<
  CandyMachineDataArgs,
  CandyMachineData
> {
  return struct<CandyMachineData>(
    [
      ['itemsAvailable', u64()],
      ['maxEditionSupply', u64()],
      ['isMutable', bool()],
      ['configLineSettings', option(getConfigLineSettingsSerializer())],
      ['hiddenSettings', option(getHiddenSettingsSerializer())],
    ],
    { description: 'CandyMachineData' }
  ) as Serializer<CandyMachineDataArgs, CandyMachineData>;
}
